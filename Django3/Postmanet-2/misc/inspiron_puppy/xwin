#!/bin/sh
#(c) Copyright Barry Kauler 2003,2004,2005,2006,2007 www.puppylinux.com
#2007 Lesser GPL licence v2 (http://www.fsf.org/licensing/licenses/lgpl.html)
#v3.90 rawpup, update for Xvesa.
#v3.94, v3.95, recognise Classmate, EeePC laptops.
#v3.98 change to home directory.
#v3.98 forced reboot handling improved by pizzasgood.
#v3.99 automatically handle problematic video adapters that hang Xvesa.
#v405 added support for xvesa 1024x600.
#v408 BK k2.6.25.16 serial mouse driver now a module 'sermouse'.
#v411 rerwin: mouse improvements.

[ -z $DISPLAY ] || exit #v2.11 from GuestToo.
echo "This script will run X windows for you..."

cd ~/   #v3.98 Ensure current directory is root, in case changed at command prompt, so rox icon and menu item open only at home directory. rerwin

#variables created at bootup by init script in initrd...
. /etc/rc.d/PUPSTATE #v2.02
#PUPMODE=current operating configuration,
#PDEV1=the partition have booted off, DEV1FS=f.s. of PDEV1,
#PUPSFS=pup_201.sfs versioned name, stored on PDEV1, PUPSAVE=vfat,sda1,/pup_save.3fs
#PMEDIA is a broad description of the boot media, ex "usbflash" or "idehd".

#0.9.9 enables to start a specific w.m. from commandline...
if [ $1 ];then
 echo -n "$1" > /etc/windowmanager
 #note, /root/.xinitrc uses this file.
fi

#v1.0.7
HAVEX="`readlink /usr/X11R7/bin/X`"
if [ "$HAVEX" = "XF86_SVGA" ];then
 #xf86config v3.3.6 creates config file at /etc, wrong place...
 [ -f /etc/XF86Config ] && mv -f /etc/XF86Config /etc/X11/XF86Config
fi

#v3.90 expanded to auto run best video mode...
if [ "$HAVEX" = "Xvesa" ];then #0.9.9

 if [ ! -f /tmp/videomode -a ! -f /etc/videomode ];then #v2.21
  ddcprobe >/tmp/ddcprobe.txt
  #weird (ddcprobe is very weird), on some hardware, edid monitor probe fails
  #every alternate run of ddcprobe...
  case "`cat /tmp/ddcprobe.txt`" in *edidfail*)
   sleep 1
   ddcprobe >/tmp/ddcprobe.txt
   ;;
  esac

#v3.99 begin
  if [ -f /etc/xorgoverrides ] && grep -q -f /etc/xorgoverrides /tmp/ddcprobe.txt;then
   rm -f /etc/.XLOADED 2> /dev/null #not necessary, precaution.
   #1st dialog offers to use Xvesa...
   /usr/sbin/xorgwizard
   HAVEX="`readlink /usr/X11R7/bin/X`"
   [ "$HAVEX" != "Xorg" ] && exit   #go to command line if not Xorg
  fi
 fi
fi
#Repeat earlier tests in case Xserver now Xorg and to retain indentation levels.
if [ "$HAVEX" = "Xvesa" ];then #0.9.9
 BASEMODE=""
 if [ ! -f /tmp/videomode -a ! -f /etc/videomode ];then #v2.21
#v3.99 end

  #v3.95 note code duplicated in xorgwizard, not efficient...
  #v3.94 detect if a Classmate PC laptop with 800x480 screen...
  #if [ "`grep 'edidfail' /tmp/ddcprobe.txt`" != "" ];then
  # if [ "`cat /tmp/ddcprobe.txt | tr -s ' ' | grep 'oem: Intel(r)915GM/910ML/915MS Graphics'`" != "" ];then
  #  if [ "`dmesg | grep 'CPU0: Intel(R) Celeron(R) M processor          900MHz'`" != "" ];then
  #   if [ "`dmesg | grep 'uDiskOnChip'`" != "" ];then
  #    #yep, looks like this is a Classmate model with 800x480...
  #    echo 'timing: 800x480@60' >> /tmp/ddcprobe.txt
  #   fi
  #  fi
  # fi
  #fi
  #v3.97 improved method: CM=Classmate, 915=chip 10=generation#...
  [ "`dmidecode -s bios-version | grep '^CM91510'`" != "" ] && echo 'timing: 800x480@60' >> /tmp/ddcprobe.txt
  #v3.95 recognise more special screens...
  DMIDECODE="`dmidecode`"
  #recognise EeePC Asus laptop...
  [ "`echo "$DMIDECODE" | grep 'Product Name: 701'`" != "" ] && [ "`echo "$DMIDECODE" | grep 'Serial Number: EeePC'`" != "" ] && echo 'timing: 800x480@60' >> /tmp/ddcprobe.txt

  echo -e '\nIf initialization freezes here, press ctrl-c and type "xorgwizard",\nselect "Xorg", choose monitor type and choose video mode.'   #v3.99
  grep '^oem:' /tmp/ddcprobe.txt > /tmp/ddcprobeoem.txt   #v3.99 current adapter signature

  #get too many weird resolutions, maybe better just only allow these...
  #want widescreen/non-vesa resolutions only...
  VESAMODES="`Xvesa -listmodes 2>&1 | grep '^0x' | tr ':' ' ' | tr -s ' ' | cut -f 1,2 -d ' '`"
  rm /tmp/ddcprobeoem.txt  #v3.99 didn't hang in Xvesa, so delete signature
  MONCHOICES="`grep -F 'timing:' /tmp/ddcprobe.txt | grep -E -v 'Apple|8514A|Mac II|\(XGA2\)' | grep -E ' 800x480@| 1024x600@| 1280x768@| 1280x800@| 1280x1024@| 1360x768@| 1400x1050@| 1440x900@| 1600x1200@| 1680x1050@| 1920x1080@| 1920x1200@' | cut -f 2 -d ' ' | sort -u`"

  if [ "$MONCHOICES" != "" ];then
   MONCUTXY="`echo "$MONCHOICES" | cut -f 1 -d '@' | tr '\n' ' '`"

   #v2.21 code to handle widescreen with intel video chips...
   if [ ! -f /etc/resolutionfix ];then
    if grep -F 'oem:' /tmp/ddcprobe.txt | grep -F -q 'Intel' ;then
     MISSINGXY=""
     for ONECUTXY in $MONCUTXY #ex: each field 1024x768
     do
      OPATTERN=" ${ONECUTXY}x"
      [ "`echo "$VESAMODES" | grep "$ONECUTXY"`" = "" ] && MISSINGXY="$ONECUTXY"
     done
     if [ "$MISSINGXY" != "" ];then
      MYXRES="`echo -n "$MISSINGXY" | cut -f 1 -d 'x'`" 
      MYYRES="`echo -n "$MISSINGXY" | cut -f 2 -d 'x'`" 
      915resolution 38 $MYXRES $MYYRES
      #...replaces mode 38 (1024x768).
      #create something for /etc/profile to execute at bootup...
      echo "915resolution 38 $MYXRES $MYYRES" > /etc/resolutionfix
      VESAMODES="`Xvesa -listmodes 2>&1 | grep '^0x' | tr ':' ' ' | tr -s ' ' | cut -f 1,2 -d ' '`"
      PPATTERN=" ${MYXRES}x${MYYRES}x"
      #BASEMOD is res that we are going to start X with...
      BASEMODE="`echo "$VESAMODES" | grep "$PPATTERN" | grep -E 'x16$|x24$|x32$' | head -n 1`"
     fi
    fi
   fi
  
   #find out if there is just one native mode...
   if [ "$BASEMODE" = "" ];then
    if [ "`echo "$MONCUTXY" | wc -l`" = "1" ];then
     QPATTERN=" ${MONCUTXY}x"
     BASEMODE="`echo "$VESAMODES" | grep "$QPATTERN" | grep -E 'x16$|x24$|x32$' | head -n 1`"
    fi
   fi
    
   [ "$BASEMODE" != "" ] && echo "$BASEMODE" > /etc/videomode #no need for wizard after startup!
  fi

  if [ "$BASEMODE" = "" ];then
   BASEMODE="`echo "$VESAMODES" | grep ' 800x600x16' | head -n 1`"
   if [ "$BASEMODE" != "" ];then
    echo "$BASEMODE" > /tmp/videomode
   else
    echo -n "0x0111 640x480x16" > /tmp/videomode
    #...desparate, not a practical mode.
   fi
  fi

  rm -f /tmp/Xflag #precaution.
  #...if /tmp/videomode exists, video-wizard is started in ~/.xinitrc
  #...note, if /etc/videomode exists instead, normal X startup.
  
 fi
 
fi

#note, mouse and keyboard types are autodetected in /etc/rc.d/rc.local0 at every bootup,
#so /etc/mousedevice and /etc/keyboardtype have autodetected values in them
#(changeable by Mouse/Keyboard Wizard, but rc.local0 will override if interface not found).

#v411 restored after removal in v407...
#update xorg.conf if mouse has changed...
MOUSEDEV="`cat /etc/mousedevice`" #autodetected in rc.sysinit
OLDMOUSEDEV="`cat /etc/oldmousedevice`" #set in rc.sysinit
if [ ! "$OLDMOUSEDEV" = "$MOUSEDEV" ];then
 if [ ! "$OLDMOUSEDEV" = "nothing" ];then #"nothing" on first boot.
  if [ -f /etc/X11/xorg.conf ];then
   case `cat /etc/mousedevice | cut -b 1-4` in
    "inpu") #"input/mice", usb
     cat /etc/X11/xorg.conf | sed -e 's/\W\+Option\W\+"Protocol"\W\+"\(\(\w\+\/\w\+\)\|\(\w\+\)\)\W\+#mouse0protocol/	Option	    "Protocol" "IMPS\/2" #mouse0protocol/g' > /tmp/xorg.conf.tmp2
     ;;
    "ttyS") #ttyS0,1,2,3, serial
     cat /etc/X11/xorg.conf | sed -e 's/\W\+Option\W\+"Protocol"\W\+"\(\(\w\+\/\w\+\)\|\(\w\+\)\)\W\+#mouse0protocol/	Option	    "Protocol" "Microsoft" #mouse0protocol/g' > /tmp/xorg.conf.tmp2
     ;;
    *)
     cat /etc/X11/xorg.conf | sed -e 's/\W\+Option\W\+"Protocol"\W\+"\(\(\w\+\/\w\+\)\|\(\w\+\)\)\W\+#mouse0protocol/	Option	    "Protocol" "auto" #mouse0protocol/g' > /tmp/xorg.conf.tmp2
     ;;
   esac
   sync
   cp -f /tmp/xorg.conf.tmp2 /etc/X11/xorg.conf
   sync
   rm -f /tmp/xorg.conf.tmp2
  fi
 fi
 OLDMOUSEDEV="$MOUSEDEV" #v411 old is now current mouse
 echo -n "$OLDMOUSEDEV" > /etc/oldmousedevice #v411
fi

#v408 k2.6.25.16 has serial driver as a module...
[ "`grep 'ttyS' /etc/mousedevice`" != "" ] && modprobe sermouse
#v411 precaution...
[ "`grep 'input/mice' /etc/mousedevice`" != "" ] && modprobe usbhid

#ask about scrollwheel... DO NOT ASK, ASSUME YES...
if [ ! -f /etc/mousebuttons ];then
 #dialog --yesno "Do you have a wheel/scroll type of mouse?" 0 0
 #if [ $? -eq 0 ];then
  echo -n "5" > /etc/mousebuttons
  echo -e "The file /etc/mousebuttons has been created, with content \"5\"."
  if [ -f /etc/X11/xorg.conf ];then
   cat /etc/X11/xorg.conf | tr -s '#' | sed -e 's/#Option\W\+"ZAxisMapping"\W\+"4 5"/Option      "ZAxisMapping" "4 5"/g' > /tmp/xorg.conf.tmp
   sync
   cp -f /tmp/xorg.conf.tmp /etc/X11/xorg.conf
  fi
 #else
 # echo -n "3" > /etc/mousebuttons
 # echo -e "...you chose \"no\"."
 # echo -e "The file /etc/mousebuttons has been created, with content \"3\"."
 # if [ -f /etc/X11/xorg.conf ];then
 #  cat /etc/X11/xorg.conf | sed -e 's/Option\W\+"ZAxisMapping"\W\+"4 5"/#Option      "ZAxisMapping" "4 5"/g' | tr -s '#' > /tmp/xorg.conf.tmp
 #  sync
 #  cp -f /tmp/xorg.conf.tmp /etc/X11/xorg.conf
 # fi
 #fi
fi

#now done in /etc/rc.d/rc.modules...
##alsa sound setup...
#if [ "`cat /etc/modprobe.conf | grep 'snd\-card\-0'`" = "" ];then
# #auto option created by BK for fast operation, less questions...
# alsaconf --auto
#fi

#rc.modules now does this...
##v2.0.0 load correct -agp driver...
#AGPDRIVER="`findhostbridge`" #in /usr/sbin.
#if [ ! "$AGPDRIVER" = "" ];then
# [ "`lsmod | grep "${AGPDRIVER}"`" = "" ] && modprobe "$AGPDRIVER" 2>/dev/null
#fi
##note, could write $AGPDRIVER to /etc/modprobe.preload to load it at kernel boot.
##note, it also loads agpgart.ko.

#v2.11 find out if xorg video drvr exists, else use xorg vesa...
if [ -f /usr/X11R7/bin/Xorg ];then
 if [ -f /etc/X11/xorg.conf ];then
  #find location of video chip drivers...
  SPECVESA="`find /usr/X11R7/lib -noleaf -mount -type f -name vesa_drv.so`"
  if [ "$SPECVESA" ];then
   DRVRSPATH="`dirname $SPECVESA`"
   #get current driver...
   DRVRCURR="`cat /etc/X11/xorg.conf | grep '#card0driver' | cut -f 2 -d '"'`" #'
   if [ "$DRVRCURR" ];then
    #if [ ! -f $DRVRSPATH/${DRVRCURR}_drv.so ];then
    #one driver is mtx_drv.o hmmm, okay do it this way (pakt)...
    ls -1 $DRVRSPATH/* | grep $DRVRCURR >/dev/null
    if [ $? -ne 0 ];then
     APATTERN="s/.*#card0driver/	Driver      \"vesa\" #card0driver/g"
     cat /etc/X11/xorg.conf | sed -e "$APATTERN" > /tmp/xorg.conf.tmp2
     sync
     cp -f /tmp/xorg.conf.tmp2 /etc/X11/xorg.conf
    fi
   fi
  fi
 fi
fi

#Puppy Xorg Video Wizard...
if [ -f /usr/X11R7/bin/Xorg ];then
 if [ -f /etc/X11/xorg.conf ];then
  if [ "`readlink /usr/X11R7/bin/X`" = "Xorg" ];then
   #v2.13 video hardware profile (must be same as in xorgwizard)...
   DDCPROBE="`ddcprobe`"
   #v2.17 patch from Nightflyer... as in xwin, may have to run ddcprobe twice...
   case "`echo "$DDCPROBE"`" in
    *edidfail*)
     sleep 1
     DDCPROBE="`ddcprobe`"
    ;;
   esac
   PROFILECHIP="`echo "$DDCPROBE" | grep '^oem: ' | head -n 1 | cut -f 2-4 -d ' ' | tr ' ' '_' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
   #PROFILEMONITOR="`echo "$DDCPROBE" | grep --extended-regexp '^monitorrange: |^monitorid: |^eisa: ' | head -n 1 | cut -f 2 -d ':' | sed -e 's/ //g' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
#v3.95 'eisa:' and 'id:' return fluctuating values on some PCs, so search in this order...
PROFILEMONITOR="`echo "$DDCPROBE" | grep '^monitorid: ' | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
[ "$PROFILEMONITOR" = "" ] && PROFILEMONITOR="`echo "$DDCPROBE" | grep '^monitorname: ' | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
[ "$PROFILEMONITOR" = "" ] && PROFILEMONITOR="`echo "$DDCPROBE" | grep '^monitorrange: ' | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
#[ "$PROFILEMONITOR" = "" ] && PROFILEMONITOR="`echo "$DDCPROBE" | grep '^dtiming: ' | tail -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
[ "$PROFILEMONITOR" = "" ] && PROFILEMONITOR="`echo "$DDCPROBE" | grep '^manufacture: ' | tail -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"
#[ "$PROFILEMONITOR" = "" ] && PROFILEMONITOR="`echo "$DDCPROBE" | grep '^eisa: ' | head -n 1 | cut -f 2 -d ':' | tr -d ' ' | sed -e 's/[^0-9a-zA-Z]/_/g'`"

   HARDWAREPROFILE="${PROFILECHIP}${PROFILEMONITOR}"
   #find out if current xorg.conf matches this profile...
   CURRENTPROFILE="`cat /etc/X11/xorg.conf | grep '^#PuppyHardwareProfile' | cut -f 2 -d '=' | cut -f 1 -d ' '`"
   if [ ! "$CURRENTPROFILE" = "$HARDWAREPROFILE" ];then
    #video hardware has changed. either changed monitor or booting different PC.
    #same current xorg.conf as a profiled filename...
    mv -f /etc/X11/xorg.conf /etc/X11/xorg.conf.${CURRENTPROFILE}
    #if a previous profiled filename for new hardware, use that...
    [ -f /etc/X11/xorg.conf.${HARDWAREPROFILE} ] && cp -af /etc/X11/xorg.conf.${HARDWAREPROFILE} /etc/X11/xorg.conf
   fi
  fi
 fi
 if [ ! -f /etc/X11/xorg.conf ];then
  rm -f /etc/.XLOADED 2> /dev/null #not necessary, precaution.
  #1st dialog offers to use Xvesa...
  /usr/sbin/xorgwizard
  HAVEX="`readlink /usr/X11R7/bin/X`"
 fi
fi



#RYW
#reboot after unclean shutdown of X
#if [ -f /etc/.XLOADED ];then
# if [ "`cat /etc/.XLOADED`" = "true" ];then
#  rm -f /etc/.XLOADED
#  reboot
# fi
#fi
#v1.0.7 J_Reys idea (see note further down)...
if [ -f /etc/.XLOADED ];then
 #v3.98 improved handling by pizzasgood...
# if [ "`cat /etc/.XLOADED`" = "true" ];then
#  #last time X ran, PC hung and had to be rebooted...
#  echo -en "\\033[1;31m" #34=blue, 33=yellow, 32=green, 31=red, 35=purple, 36=aquablue, 38=black.
#  echo '
#It seems that last time X ran, the computer hung and you had to reboot.
#Have now dropped down to the commandline. If you want to run the Xorg
#Video Wizard, type "xorgwizard", and after configuring /etc/X11/xorg.conf
#(hopefully correctly this time!) type "xwin" to start X.'
#  echo -e "\\033[0;39m"
#  rm -f /etc/.XLOADED #otherwise cannot start X.
#  exit
# fi
 if [ "`cat /etc/.XLOADED`" = "true" ];then
  #last time X ran, PC hung and had to be rebooted...
  dialog --timeout 3 --title "Warning" --yes-label "Ignore" --no-label "Commandline" --yesno "X seems to have exited uncleanly the last time you ran Puppy.  This is usually because of an improper shutdown (such as a power failure), but may be because something is broken.

If it was just something like a power failure, wait for 3 seconds or choose <Ignore> for normal startup of X...

If there is a problem, such as X not working, choose <Commandline> to drop out to a commandline. There will then be further advice how to fix X...

If undecided, wait 3 seconds for normal startup of X..." 0 0
  if [ ! $? = 1 ]; then
    rm /etc/.XLOADED
  else
    echo -en "\\033[1;31m" #34=blue, 33=yellow, 32=green, 31=red, 35=purple, 36=aquablue, 38=black.
    echo '
It seems that last time X ran, the computer hung and you had to reboot.
Have now dropped down to the commandline. If you want to run the Xorg
Video Wizard, type "xorgwizard", and after configuring /etc/X11/xorg.conf
(hopefully correctly this time!) type "xwin" to start X.'
    echo -e "\\033[0;39m"
    rm -f /etc/.XLOADED #otherwise cannot start X.
    exit
  fi
 fi

fi



if [ "$HAVEX" = "Xvesa" ];then #0.9.9
 #/tmp/videomode exists if starting X with new video test mode...
 if [ -e /tmp/videomode ];then
  cat /tmp/videomode | grep " 800x600"
  if [ $? -eq 0 ];then #=0 if found.
   if [ -e /tmp/Xflag ];then
    #we have just attempted 800x600x16 and aborted with ctrl-alt-backspace
    #so have failed.
    echo "An attempt has just been made to run X at 800x600x16 but it has"
    echo "not worked (or it did but you did not press the OK button in the"
    echo "Video-wizard). It is not feasible to run Puppy at any lower resolution"
    echo -e "or color. If you want to try again, type \"xwin\" at the prompt."
    echo "It may be helpful to look in /tmp/xerrs.txt for error messages"
    rm -f /tmp/videomode
    rm -f /tmp/Xflag
    echo -n "0x0111 640x480x16" > /etc/videomode #desparate.
    exit 0
   else
    #flag to prevent endless loop X restarting...
    touch /tmp/Xflag
    #...pressing a button in video-wizard removes this file.
    #...however, aborting X will leave it in existence.
   fi
  fi
 fi
 #/tmp/videomode exists if starting X with new video test mode...
 if [ -e /tmp/videomode ];then
  #stored in format "0x0111 640x480x16"
  VIDMODE="`cat /tmp/videomode | cut -f 1 -d ' '`"
  VIDSCRN="`cat /tmp/videomode | tr -s ' ' | cut -f 2 -d ' '`"
 else
  #stored in format "0x0111 640x480x16"
  VIDMODE="`cat /etc/videomode | cut -f 1 -d ' '`"
  VIDSCRN="`cat /etc/videomode | tr -s ' ' | cut -f 2 -d ' '`"
 fi
fi

MOUSEBUTTONS=3
if [ -e /etc/mousebuttons ];then
 MOUSEBUTTONS=`cat /etc/mousebuttons`
fi
#v2.02 fix bug discovered by Dougal...
if [ $MOUSEBUTTONS -eq 2 ];then
 #the problem is, if /etc/xextraoptions has '-2button' which turns on middle-button
 #emulation, if leave MOUSEBUTTONS=2 then the right button does not work.
 #have to pass '3' to Xvesa, meaning effectively 3 buttons available...
 [ ! "`cat /etc/xextraoptions | grep ' \-2button'`" = "" ] && MOUSEBUTTONS=3
fi

#0.9.8
XEXTRAOPTIONS=""
if [ -e /etc/xextraoptions ];then
 XEXTRAOPTIONS="`cat /etc/xextraoptions`"
fi

#finally, start X...
#J_Rey had a good idea, flag XLOADED... and set to false on exit.
#but if PC hangs, XLOADED will still be true, so will know it is broken.
echo -n "true" > /etc/.XLOADED
case $HAVEX in
 Xvesa)
  echo "Starting X with video mode $VIDMODE and mouse $MOUSEDEV..."
  #startx $VIDMODE $MOUSEDEV > /tmp/xerrs.txt 2>&1
  #Puppy 0.8.4 no need for startx script...
  VIDFREQ="`echo -n "$VIDSCRN" | cut -f 4 -d "x"`"
  if [ ! "$VIDFREQ" ];then
   echo "$VIDMODE" > /tmp/currentvideomode
   /usr/X11R7/bin/xinit /root/.xinitrc -- -mode $VIDMODE $XEXTRAOPTIONS -mouse /dev/mouse,$MOUSEBUTTONS > /tmp/xerrs.log 2>&1
  else
   #also, want to have adjustable frequency, VIDSCRN=widthxheightxdepthxfreq...
   echo "$VIDSCRN" > /tmp/currentvideomode
   /usr/X11R7/bin/xinit /root/.xinitrc -- -screen $VIDSCRN $XEXTRAOPTIONS -mouse /dev/mouse,$MOUSEBUTTONS > /tmp/xerrs.log 2>&1
  fi
  ;;
 Xfbdev)
  echo "Starting X with Xfbdev Kdrive X server, mouse $MOUSEDEV..."
  /usr/X11R7/bin/xinit /root/.xinitrc -- -mouse /dev/mouse,$MOUSEBUTTONS > /tmp/xerrs.log 2>&1
  ;;
 Xi810) #v1.0.7
  echo "Starting X with Xi810 Kdrive X server, mouse $MOUSEDEV..."
  #echo "(experimental, currently fixed to 1024x768x16x72 in /usr/X11R7/bin/xwin)"
   /usr/X11R7/bin/xinit /root/.xinitrc -- -screen $VIDSCRN -mouse /dev/mouse,$MOUSEBUTTONS > /tmp/xerrs.log 2>&1
  ;;
 XF86_SVGA)
  echo "Starting X, specs in /etc/X11/XF86Config, startup apps /root/.xinitrc..."
  /usr/X11R7/bin/xinit /root/.xinitrc -- -bpp 16 > /tmp/xerrs.log 2>&1
  ;;
 Xorg)
  echo "Starting X, specs in /etc/X11/xorg.conf, startup apps /root/.xinitrc..."
  #v2.11 G2 suggested -br for black background instead of checked...
  /usr/X11R7/bin/xinit /root/.xinitrc -- -br -nolisten tcp > /tmp/xerrs.log 2>&1
  ;;
 *)
  /usr/X11R7/bin/xinit /root/.xinitrc --  > /tmp/xerrs.log 2>&1
  ;;
esac
echo -n "false" > /etc/.XLOADED #see note above.
#...if PC hung, run xorgwizard at next bootup (see further up).

echo 'Exited from X. Type "xwin [fvwm95|jwm]" to restart X ([ ] mean optional).'
echo '(To shutdown PC type "poweroff", to reboot PC type "reboot")'
if [ -f /usr/X11R7/bin/Xfbdev ];then
 echo '(To run the Xfbdev Framebuffer Wizard, type "framebufferwizard")'
fi
if [ "$HAVEX" = "XF86_SVGA" ];then #v1.0.7
 echo -en "\\033[1;31m" #34=blue, 33=yellow, 32=green, 31=red, 35=purple, 36=aquablue, 38=black.
 echo 'If X failed to start, type "xf86config" to setup X'
 echo '  -- you will need to know type of mouse, keyboard and video chip'
 echo '  -- thix X is for pre-2000 video chips, but many recent chips backwards-compat.'
 echo '  -- accept default save /etc/XF86Config, Puppy will move this to /etc/X11'
 echo '  -- (XF86Config is the configuration file for X and can be edited manually)'
 echo -n '  -- LAST RESORT, drop back to Xvesa by typing "ln -sf Xvesa /usr/X11R7/bin/X"'
 echo -e "\\033[0;39m"
fi
if [ "$HAVEX" = "Xorg" ];then #v1.0.7
 echo -en "\\033[1;35m" #34=blue, 33=yellow, 32=green, 31=red, 35=purple, 36=aquablue, 38=black.
 echo -n 'If X failed to start, type "xorgwizard" to setup X'
 echo -e "\\033[0;39m"
fi

if [ "$HAVEX" = "Xvesa" ];then
 if [ -e /tmp/videomode ];then
  exec xwin #restart X.
 fi
fi

#v0.9.8
#/root/.fvwm95rc or .jwmrc calls /usr/X11R7/bin/wmreboot or wmpoweroff at exit,
#which create /tmp/wmexitmode.txt then kill all X processes.
#0.9.9 ditto for w.m. restart calls /usr/X11R7/bin/restartwm.
if [ -f /tmp/wmexitmode.txt ];then
 WMEXITMODE="`cat /tmp/wmexitmode.txt`"
 #rm -f /tmp/wmexitmode.txt ...no, removed in rc.shutdown.
 if [ "$WMEXITMODE" = "poweroff" ];then
  exec /sbin/poweroff
 fi
 if [ "$WMEXITMODE" = "reboot" ];then
  exec /sbin/reboot
 fi
 #0.9.9 restart window manager...
 #make a gross assumption, if wmexitmode.txt exists, haven't already exited this script, then want
 #to restart maybe with different window manager. /etc/windowmanager already has desired w.m.
 rm -f /tmp/wmexitmode.txt #definitely delete it now.
  #v1.0.5 thanks GuestToo for advice on this, works with chooselocale script...
  NEWLANG="`cat /etc/profile | grep "LANG=" | cut -f 2 -d '='`"
  if [ "$NEWLANG" ];then #precaution
   if [ ! "$NEWLANG" = "$LANG" ];then
    export LANG=$NEWLANG
   fi
  fi
 exec xwin
fi

#the end#
